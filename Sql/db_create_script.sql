-- DROP SCHEMA public;

CREATE SCHEMA public AUTHORIZATION pg_database_owner;

COMMENT ON SCHEMA public IS 'standard public schema';

-- DROP SEQUENCE public.accrual_category_id_seq;

CREATE SEQUENCE public.accrual_category_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.accrual_id_seq;

CREATE SEQUENCE public.accrual_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.accrual_type_id_seq;

CREATE SEQUENCE public.accrual_type_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 9223372036854775807
	START 1
	CACHE 1
	NO CYCLE;-- public.accrual_type definition

-- Drop table

-- DROP TABLE public.accrual_type;

CREATE TABLE public.accrual_type (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	type_name varchar NOT NULL,
	is_income bool NOT NULL,
	CONSTRAINT accrual_type_pk PRIMARY KEY (id)
);


-- public.accrual_category definition

-- Drop table

-- DROP TABLE public.accrual_category;

CREATE TABLE public.accrual_category (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	id_accrual_type int8 NOT NULL,
	category_name varchar NOT NULL,
	CONSTRAINT accrual_category_pk PRIMARY KEY (id),
	CONSTRAINT accrual_type_fk FOREIGN KEY (id_accrual_type) REFERENCES public.accrual_type(id)
);


-- public.accrual definition

-- Drop table

-- DROP TABLE public.accrual;

CREATE TABLE public.accrual (
	id int8 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE) NOT NULL,
	id_accrual_category int8 NOT NULL,
	amount numeric(12, 2) NOT NULL,
	"comment" varchar NULL,
	accrual_date date NOT NULL,
	CONSTRAINT accrual_pk PRIMARY KEY (id),
	CONSTRAINT accrual_category_fk FOREIGN KEY (id_accrual_category) REFERENCES public.accrual_category(id)
);


-- public."v$accrual" source

CREATE OR REPLACE VIEW public."v$accrual"
AS SELECT a.id,
    t.type_name,
    ac.category_name,
    a.amount,
    a.comment,
    a.accrual_date,
    t.is_income
   FROM accrual a
     JOIN accrual_category ac ON a.id_accrual_category = ac.id
     JOIN accrual_type t ON ac.id_accrual_type = t.id;



-- DROP FUNCTION public."f$accrual_category_read_by_type"(int8);

CREATE OR REPLACE FUNCTION public."f$accrual_category_read_by_type"(vp_id_accrual_type bigint)
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
declare 
	ref refcursor;
begin
	open ref for 
		select * from public.accrual_category where id_accrual_type = vp_id_accrual_type;
	return ref;
end;
$function$
;

-- DROP FUNCTION public."f$accrual_type_read_all"();

CREATE OR REPLACE FUNCTION public."f$accrual_type_read_all"()
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
declare 
	ref refcursor;
begin
	open ref for 
		select * from public.accrual_type;
	return ref;
end;
$function$
;

-- DROP FUNCTION public."f$accrual_type_read_by_id"(int8);

CREATE OR REPLACE FUNCTION public."f$accrual_type_read_by_id"(vp_id bigint)
 RETURNS refcursor
 LANGUAGE plpgsql
AS $function$
declare 
	ref refcursor;
begin
	open ref for 
		select * from public.accrual_type where id = vp_id;
	return ref;
end;
$function$
;